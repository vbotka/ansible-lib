---
# All rights reserved (c) 2020-2024, Vladimir Botka <vbotka@gmail.com>
# Simplified BSD License, https://opensource.org/licenses/BSD-2-Clause

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# ansible_lib: al_hosts_reachable
#
# Description: Create groups of reachable and unreachable hosts.
#
# Input:
#
#   al_hosts_reachable_group ..... Group of reachable hosts (default: al_reachable)
#   al_hosts_unreachable_group ... Group of unreachable hosts (default: al_unreachable)
#   al_hosts_connection_timeout .. Connection timeout (default: 10 seconds)
#
# Output:
#
#   Goups al_hosts_reachable_group and al_hosts_unreachable_group will
#   be created.
#
# Example:
#
#   - name: Create groups of reachable and unreachable hosts
#     hosts: all
#     gather_facts: false
#     tasks:
#       - include_role:
#           name: vbotka.ansible_lib
#           tasks_from: al_hosts_reachable
#
#   - name: Run play with reachable hosts only
#     hosts: al_reachable
#     gather_facts: true
#     tasks:
#       - debug:
#           var: inventory_hostname
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# https://github.com/vbotka/ansible-lib/tasks/al_hosts_reachable.yml

- name: "Al_hosts_reachable: Default variables."
  ansible.builtin.set_fact:
    al_hosts_reachable_group: "{{ al_hosts_reachable_group | d('al_reachable') }}"
    al_hosts_unreachable_group: "{{ al_hosts_unreachable_group | d('al_unreachable') }}"
    al_hosts_connection_timeout: "{{ al_hosts_connection_timeout | d(10) }}"

- name: "Al_hosts_reachable: Debug al_debug={{ al_debug }}"
  vars:
    msg: |-
      al_hosts_reachable_group: {{ al_hosts_reachable_group }}
      al_hosts_unreachable_group: {{ al_hosts_unreachable_group }}
      al_hosts_connection_timeout: {{ al_hosts_connection_timeout }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"
  when: al_debug | bool

- name: Wait for connection and set variable
  block:

    - name: "Al_hosts_reachable: Wait for connection."
      ansible.builtin.wait_for_connection:
        timeout: "{{ al_hosts_connection_timeout }}"

  rescue:

    - name: "Al_hosts_reachable: Rescue debug al_debug={{ al_debug }}"
      ansible.builtin.debug:
        msg: "[ERR] Can not connect to {{ inventory_hostname }}"
      when: al_debug | bool

    - name: "Al_hosts_reachable: Rescue set variable my_host_reachable False."
      ansible.builtin.set_fact:
        my_host_reachable: false

    - name: "Al_hosts_reachable: Rescue meta clear errors."
      ansible.builtin.meta: clear_host_errors

    - name: "Al_hosts_reachable: Rescue meta end host."
      ansible.builtin.meta: end_host

- name: "Al_hosts_reachable: Debug connected al_debug={{ al_debug }}"
  ansible.builtin.debug:
    msg: "[OK]  Connnected to {{ inventory_hostname }}"
  when: al_debug | bool

- name: "Al_hosts_reachable: Set variable my_host_reachable True."
  ansible.builtin.set_fact:
    my_host_reachable: true

- name: Evaluate connections
  run_once: true
  block:

    - name: "Al_hosts_reachable: Add hosts to group {{ al_hosts_reachable_group }}"
      ansible.builtin.add_host:
        name: "{{ item }}"
        groups: "{{ al_hosts_reachable_group }}"
      loop: "{{ hostvars | dict2items | json_query('[?value.my_host_reachable].key') }}"

    - name: "Al_hosts_reachable: Add hosts to group {{ al_hosts_unreachable_group }}"
      ansible.builtin.add_host:
        name: "{{ item }}"
        groups: "{{ al_hosts_unreachable_group }}"
      loop: "{{ hostvars.keys() | list | difference(groups[al_hosts_reachable_group]) }}"

    - name: "Al_hosts_reachable: Debug group {{ al_hosts_reachable_group }}"
      vars:
        msg: |-
          group: {{ al_hosts_reachable_group }}
          {{ groups[al_hosts_reachable_group] | to_nice_yaml(indent=2) | indent(2) }}
      ansible.builtin.debug:
        msg: "{{ '{}'.format(msg) }}"
      when:
        - al_debug | bool
        - groups[al_hosts_reachable_group] is defined

    - name: "Al_hosts_reachable: Debug group {{ al_hosts_unreachable_group }}"
      vars:
        msg: |-
          Group: {{ al_hosts_unreachable_group }}
          {{ groups[al_hosts_unreachable_group] | to_nice_yaml }}
      ansible.builtin.debug:
        msg: "{{ '{}'.format(msg) }}"
      when:
        - al_debug | bool
        - groups[al_hosts_unreachable_group] is defined

# EOF
...
