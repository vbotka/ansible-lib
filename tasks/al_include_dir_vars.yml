---
# All rights reserved (c) 2022-2025, Vladimir Botka <vbotka@gmail.com>
# Simplified BSD License, https://opensource.org/licenses/BSD-2-Clause
# SPDX-License-Identifier: BSD-2-Clause

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# ansible_lib: al_include_dir_vars
#
# Description:
#
#   Create dictionary of vars from files in directories in al_include_dir_vars_dir on
#   ansible controller.
#
# Input:
#
#   al_include_dir_vars_dir ... directory with the directories and
#                               configuration files
#
# Output:
#
#   al_vars ................... dictionary comprising the variables
#
# Example:
#
#   vars:
#     al_include_dir_vars_dir: "{{ playbook_dir }}/al_vars"
#   tasks:
#     - include_role:
#         name: vbotka.ansible_lib
#         tasks_from: al_include_dir_vars.yml
#       run_once: true
#
# Files:
#
#   shell> tree al_vars/
#   al_vars/
#   ├── var1
#   │   ├── A1
#   │   └── B1
#   └── var2
#       ├── A2
#       └── B2
#   2 directories, 4 files
#
#   shell> cat al_vars/var1/A1
#   - a1-0
#   - a1-1
#
#   shell> cat al_vars/var1/B1
#   b1:
#     - item1
#     - item2
#
#   shell> cat al_vars/var2/A2
#   - a2-0
#   - a2-1
#
#   shell> cat al_vars/var2/B2
#   b2:
#     - item1
#     - item2
#
# Result:
#
#   al_vars:
#     var1:
#       A1:
#       - a1-0
#       - a1-1
#       B1:
#         b1:
#         - item1
#         - item2
#     var2:
#       A2:
#       - a2-0
#       - a2-1
#       B2:
#         b2:
#         - item1
#         - item2
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# https://github.com/vbotka/ansible-lib/tasks/al_include_dir_vars.yml

# Debug and Test input variable - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: "Al_include_dir_vars: Debug al_debug={{ al_debug }}"
  when: al_debug | bool
  vars:
    msg: |-
      al_include_dir_vars_dir: {{ al_include_dir_vars_dir | d('UNDEFINED') }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"

- name: "Al_include_dir_vars: End of play."
  when: al_include_dir_vars_dir is not defined
  ansible.builtin.fail:
    msg: Variable al_include_dir_vars_dir is not defined. End of play.

# Get list of directories - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: "Al_include_dir_vars: Get list of directories."
  delegate_to: localhost
  register: result
  ansible.builtin.find:
    paths: "{{ al_include_dir_vars_dir }}"
    file_type: directory

- name: "Al_include_dir_vars: Debug list of directories al_debug={{ al_debug }}"
  when: al_debug | bool
  ansible.builtin.debug:
    var: result

- name: "Al_include_dir_vars: Set list of directories."
  ansible.builtin.set_fact:
    al_include_dir_vars_list: "{{ result.files | map(attribute='path')
                                               | map('basename')
                                               | list }}"

- name: "Al_include_dir_vars: Debug list of directories al_debug={{ al_debug }}"
  when: al_debug | bool
  ansible.builtin.debug:
    var: al_include_dir_vars_list

# Get lists of files - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: "Al_include_dir_vars: Set dictionary of lists of files."
  vars:
    fileglob: "{{ al_include_dir_vars_dir }}/{{ item }}/*"
    files: "{{ q('fileglob', fileglob) | map('basename') | list }}"
  ansible.builtin.set_fact:
    al_include_dir_vars_keys: "{{ al_include_dir_vars_keys | d({}) |
                                  combine({item: files}) }}"
  loop: "{{ al_include_dir_vars_list }}"

- name: "Al_include_dir_vars: Debug dictionary of lists of files al_debug={{ al_debug }}"
  when: al_debug | bool
  ansible.builtin.debug:
    var: al_include_dir_vars_keys

# Get content of the files - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: "Al_include_dir_vars: Get content of files."
  when: al_include_dir_vars_keys is defined
  vars:
    path: "{{ al_include_dir_vars_dir }}/{{ item.0.key }}/{{ item.1 }}"
    value: "{{ lookup('file', path) | from_yaml }}"
  ansible.builtin.set_fact:
    al_include_dir_vars_values: "{{ al_include_dir_vars_values | d([]) +
                                    [{'var': item.0.key, 'key': item.1, 'value': value}] }}"
  loop: "{{ al_include_dir_vars_keys | dict2items | subelements('value') }}"

- name: "Al_include_dir_vars: Debug content of files al_debug={{ al_debug }}"
  when: al_debug | bool
  ansible.builtin.debug:
    var: al_include_dir_vars_values

# Create dictionary al_vars
- name: "Al_include_dir_vars: Create dictionary al_vars."
  when: al_include_dir_vars_values is defined
  ansible.builtin.set_fact:
    al_vars: "{{ al_vars | d({}) | combine({item.0: item.1 | items2dict}) }}"
  loop: "{{ al_include_dir_vars_values | groupby('var') }}"
  loop_control:
    label: "{{ item.0 }}"

- name: "Al_include_dir_vars: Debug dictionary al_vars al_debug={{ al_debug }}"
  when: al_debug | bool
  ansible.builtin.debug:
    var: al_vars

# EOF
...
